XML-RPC Web Service
*******************

:Test-Layer: functional

GUM is a handy way of querying via XML-RPC. This is easier to script
against than raw LDAP queries, and it preserves any events that happen
as a result of modifications to LDAP via GUM.

Except right now we only have two read-only methods. We could add more
as needed ...

Also this should ideally be more of a unit test coverage thing, but we
have to do more refactoring for GUM, especially with the LDAP integration.
But this should at least remind Kevin not to break things in the future ...

We can set-up an XML-RPC client connection:

  >>> from gum.ftests.xmlrpc_helper import ServerProxy
  >>> gumapi = ServerProxy("http://localhost:8080/gumsite")
 
We can query for information about a group. If the group does not exist
then we get a Fault exception:

  >>> gumapi.get_group_info_by_id('bogusgroup')
  Traceback (most recent call last):
  ...
  Fault: <Fault -1: "Unexpected Zope exception: KeyError: 'Group id bogusgroup does not exist.'">

We can also query for information about a user. Same oddball empty result
bevaviour:

  >>> gumapi.get_user_info_by_id('bogususer')
  {'telephoneNumber': [], 'cn': '', 'email': ''}
 
Let's try and test something useful. We will first create a group, with a
single user, then get that information back using the XML-RPC API:

  >>> import zope.testbrowser.testing
  >>> browser = zope.testbrowser.testing.Browser()
  >>> from zope.securitypolicy.rolepermission import rolePermissionManager
  >>> rolePermissionManager.grantPermissionToRole('gum.Add',
  ...                                             'zope.Manager')
  >>> browser.addHeader('Authorization', 'Basic mgr:mgrpw')
  >>> browser.open("http://localhost:8080/gumsite/@@adduser")
  >>> browser.getControl(name="form.cn").value = "ME JOE"
  >>> browser.getControl(name="form.sn").value = "-"
  >>> browser.getControl(name="form.givenName").value = "-"
  >>> browser.getControl(name="form.email").value = "joe@grok.com"
  >>> browser.getControl(name="form.o").value = ["Unknown",]
  >>> browser.getControl(name="form.__name__").value = "joe"
  >>> browser.getControl("Add User entry").click()
  >>> gumapi.get_user_info_by_id('joe')
  {'telephoneNumber': [], 'cn': 'ME JOE', 'email': 'joe@grok.com'}
  
  >>> from gum.group import Group  
  >>> tribe = Group('mammoth hunters')
  >>> tribe.description = 'band of neanderthals'
  >>> tribe.uids = ['joe',]
  >>> tribe.save()
  >>> gumapi.get_group_info_by_id('mammoth hunters')
  {'description': 'band of neanderthals', 'uids': ['joe'], 'title': 'mammoth hunters'}

We can get a range of modifications by date:

  >>> import datetime
  >>> gumapi.recent_modifications()
  [{'telephoneNumber': [], 'employeeType': None, 'description': '', 'labeledUri': None, 'roomNumber': None, 'o': 'Unknown', 'street': None, 'sn': '-', '__name__': 'joe', 'ou': None, 'givenName': '-', 'email': 'joe@grok.com', 'job_title': None, 'cn': 'ME JOE'}]

We can get all users:

  >>> gumapi.all_users()
  [{'telephoneNumber': ['(604) 707 5900 extn 5410'], 'employeeType': 'Full Time', 'description': '', 'labeledUri': None, 'roomNumber': ['1st floor - offices'], 'o': 'example', 'street': ['570 West 7th Ave'], 'sn': 'Doe', '__name__': 'jdoe', 'ou': 'Bioinformatics', 'givenName': 'John', 'email': 'jdoe@example.com', 'job_title': 'Staff Scientist', 'cn': 'John Doe'}, {'telephoneNumber': ['(604) 707 5900 extn 5410'], 'employeeType': 'Full Time', 'description': '', 'labeledUri': None, 'roomNumber': ['1st floor - offices'], 'o': 'example', 'street': ['570 West 7th Ave'], 'sn': 'Smith', '__name__': 'ssmith', 'ou': 'Bioinformatics', 'givenName': 'Sally', 'email': 'ssmith@example.com', 'job_title': 'Staff Scientist', 'cn': 'Sally Smith'}, {'telephoneNumber': [], 'employeeType': None, 'description': '', 'labeledUri': None, 'roomNumber': None, 'o': 'Unknown', 'street': None, 'sn': '-', '__name__': 'joe', 'ou': None, 'givenName': '-', 'email': 'joe@grok.com', 'job_title': None, 'cn': 'ME JOE'}]

Then we gotta remember to clean-up LDAP:

  >>> gumsite = getRootFolder()['gumsite']
  >>> del gumsite['groups']['mammoth hunters']
  >>> del gumsite['users']['joe']

